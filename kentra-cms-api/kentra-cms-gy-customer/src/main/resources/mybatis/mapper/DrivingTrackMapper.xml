<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kentrasoft.cms.dao.DrivingTrackMapper">
  <resultMap id="BaseResultMap" type="com.kentrasoft.cms.entity.DrivingTrack">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="driving_record" jdbcType="VARCHAR" property="drivingRecord" />
    <result column="license_num" jdbcType="VARCHAR" property="licenseNum" />
    <result column="device_gis_x" jdbcType="VARCHAR" property="deviceGisX" />
    <result column="device_gis_y" jdbcType="VARCHAR" property="deviceGisY" />
    <result column="through_time" jdbcType="TIMESTAMP" property="throughTime" />
    <result column="device_address" jdbcType="VARCHAR" property="deviceAddress" />
    <result column="lane_num" jdbcType="VARCHAR" property="laneNum" />
    <result column="equipment_number" jdbcType="VARCHAR" property="equipmentNumber" />
    <result column="extends1" jdbcType="VARCHAR" property="extends1" />
    <result column="extends2" jdbcType="VARCHAR" property="extends2" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, driving_record, license_num, device_gis_x, device_gis_y, through_time, device_address, 
    lane_num, equipment_number, extends1, extends2
  </sql>
  <select id="selectByExample" parameterType="com.kentrasoft.cms.entity.DrivingTrackExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from driving_track
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from driving_track
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from driving_track
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kentrasoft.cms.entity.DrivingTrackExample">
    delete from driving_track
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kentrasoft.cms.entity.DrivingTrack">
    insert into driving_track (id, driving_record, license_num, 
      device_gis_x, device_gis_y, through_time, 
      device_address, lane_num, equipment_number, 
      extends1, extends2)
    values (#{id,jdbcType=INTEGER}, #{drivingRecord,jdbcType=VARCHAR}, #{licenseNum,jdbcType=VARCHAR}, 
      #{deviceGisX,jdbcType=VARCHAR}, #{deviceGisY,jdbcType=VARCHAR}, #{throughTime,jdbcType=TIMESTAMP}, 
      #{deviceAddress,jdbcType=VARCHAR}, #{laneNum,jdbcType=VARCHAR}, #{equipmentNumber,jdbcType=VARCHAR}, 
      #{extends1,jdbcType=VARCHAR}, #{extends2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.kentrasoft.cms.entity.DrivingTrack">
    insert into driving_track
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="drivingRecord != null">
        driving_record,
      </if>
      <if test="licenseNum != null">
        license_num,
      </if>
      <if test="deviceGisX != null">
        device_gis_x,
      </if>
      <if test="deviceGisY != null">
        device_gis_y,
      </if>
      <if test="throughTime != null">
        through_time,
      </if>
      <if test="deviceAddress != null">
        device_address,
      </if>
      <if test="laneNum != null">
        lane_num,
      </if>
      <if test="equipmentNumber != null">
        equipment_number,
      </if>
      <if test="extends1 != null">
        extends1,
      </if>
      <if test="extends2 != null">
        extends2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="drivingRecord != null">
        #{drivingRecord,jdbcType=VARCHAR},
      </if>
      <if test="licenseNum != null">
        #{licenseNum,jdbcType=VARCHAR},
      </if>
      <if test="deviceGisX != null">
        #{deviceGisX,jdbcType=VARCHAR},
      </if>
      <if test="deviceGisY != null">
        #{deviceGisY,jdbcType=VARCHAR},
      </if>
      <if test="throughTime != null">
        #{throughTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deviceAddress != null">
        #{deviceAddress,jdbcType=VARCHAR},
      </if>
      <if test="laneNum != null">
        #{laneNum,jdbcType=VARCHAR},
      </if>
      <if test="equipmentNumber != null">
        #{equipmentNumber,jdbcType=VARCHAR},
      </if>
      <if test="extends1 != null">
        #{extends1,jdbcType=VARCHAR},
      </if>
      <if test="extends2 != null">
        #{extends2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kentrasoft.cms.entity.DrivingTrackExample" resultType="java.lang.Long">
    select count(*) from driving_track
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update driving_track
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.drivingRecord != null">
        driving_record = #{record.drivingRecord,jdbcType=VARCHAR},
      </if>
      <if test="record.licenseNum != null">
        license_num = #{record.licenseNum,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceGisX != null">
        device_gis_x = #{record.deviceGisX,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceGisY != null">
        device_gis_y = #{record.deviceGisY,jdbcType=VARCHAR},
      </if>
      <if test="record.throughTime != null">
        through_time = #{record.throughTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deviceAddress != null">
        device_address = #{record.deviceAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.laneNum != null">
        lane_num = #{record.laneNum,jdbcType=VARCHAR},
      </if>
      <if test="record.equipmentNumber != null">
        equipment_number = #{record.equipmentNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.extends1 != null">
        extends1 = #{record.extends1,jdbcType=VARCHAR},
      </if>
      <if test="record.extends2 != null">
        extends2 = #{record.extends2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update driving_track
    set id = #{record.id,jdbcType=INTEGER},
      driving_record = #{record.drivingRecord,jdbcType=VARCHAR},
      license_num = #{record.licenseNum,jdbcType=VARCHAR},
      device_gis_x = #{record.deviceGisX,jdbcType=VARCHAR},
      device_gis_y = #{record.deviceGisY,jdbcType=VARCHAR},
      through_time = #{record.throughTime,jdbcType=TIMESTAMP},
      device_address = #{record.deviceAddress,jdbcType=VARCHAR},
      lane_num = #{record.laneNum,jdbcType=VARCHAR},
      equipment_number = #{record.equipmentNumber,jdbcType=VARCHAR},
      extends1 = #{record.extends1,jdbcType=VARCHAR},
      extends2 = #{record.extends2,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kentrasoft.cms.entity.DrivingTrack">
    update driving_track
    <set>
      <if test="drivingRecord != null">
        driving_record = #{drivingRecord,jdbcType=VARCHAR},
      </if>
      <if test="licenseNum != null">
        license_num = #{licenseNum,jdbcType=VARCHAR},
      </if>
      <if test="deviceGisX != null">
        device_gis_x = #{deviceGisX,jdbcType=VARCHAR},
      </if>
      <if test="deviceGisY != null">
        device_gis_y = #{deviceGisY,jdbcType=VARCHAR},
      </if>
      <if test="throughTime != null">
        through_time = #{throughTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deviceAddress != null">
        device_address = #{deviceAddress,jdbcType=VARCHAR},
      </if>
      <if test="laneNum != null">
        lane_num = #{laneNum,jdbcType=VARCHAR},
      </if>
      <if test="equipmentNumber != null">
        equipment_number = #{equipmentNumber,jdbcType=VARCHAR},
      </if>
      <if test="extends1 != null">
        extends1 = #{extends1,jdbcType=VARCHAR},
      </if>
      <if test="extends2 != null">
        extends2 = #{extends2,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kentrasoft.cms.entity.DrivingTrack">
    update driving_track
    set driving_record = #{drivingRecord,jdbcType=VARCHAR},
      license_num = #{licenseNum,jdbcType=VARCHAR},
      device_gis_x = #{deviceGisX,jdbcType=VARCHAR},
      device_gis_y = #{deviceGisY,jdbcType=VARCHAR},
      through_time = #{throughTime,jdbcType=TIMESTAMP},
      device_address = #{deviceAddress,jdbcType=VARCHAR},
      lane_num = #{laneNum,jdbcType=VARCHAR},
      equipment_number = #{equipmentNumber,jdbcType=VARCHAR},
      extends1 = #{extends1,jdbcType=VARCHAR},
      extends2 = #{extends2,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!--根据行驶记录id查询行驶轨迹-->
  <!--查询行车缴费记录-->
  <resultMap id="RecordDetailsResultMap" type="com.kentrasoft.cms.entity.dto.RecordDetails">
    <result column="driving_record" jdbcType="VARCHAR" property="drivingRecord"/>
    <result column="license_num" jdbcType="VARCHAR" property="licenseNum"/>
    <result column="device_gis_x" jdbcType="VARCHAR" property="gisX"/>
    <result column="device_gis_y" jdbcType="VARCHAR" property="gisY"/>
    <result column="through_time" jdbcType="VARCHAR" property="througTime"/>
    <result column="device_address" jdbcType="VARCHAR" property="stationName"/>
    <result column="lane_num" jdbcType="VARCHAR" property="laneNum"/>
    <result column="equipment_number" jdbcType="VARCHAR" property="stationCode"/>
    <result column="extends1" jdbcType="VARCHAR" property="isEnd"/>
    <result column="extends2" jdbcType="VARCHAR" property="dataSource" />
  </resultMap>


  <select id="findByDrivingRecord" parameterType="java.lang.String" resultMap="RecordDetailsResultMap">
      SELECT
	*
   FROM
	 (
		SELECT
			tk.driving_record AS driving_record,
			tk.license_num AS license_num,
			tk.device_gis_x AS device_gis_x,
			tk.device_gis_y AS device_gis_y,
			unix_timestamp(tk.through_time) AS through_time,
			tk.device_address AS device_address,
			tk.lane_num AS lane_num,
			tk.equipment_number AS equipment_number,
			tk.extends1 AS extends1,
			tk.extends2 AS extends2
		FROM
			driving_track tk 
		WHERE (tk.device_gis_x!=null or tk.device_gis_x!='') AND (tk.device_gis_y!=NULL or tk.device_gis_y!='')
		UNION
			SELECT
				cp.driving_record AS driving_record,
				cp.license_num AS license_num,
				cp.point_gis_x AS device_gis_x,
				cp.point_gis_y AS device_gis_y,
				unix_timestamp(cp.pass_time) AS through_time,
				cp.station_name AS device_address,
				NULL AS lane_num,
				cp.point_code AS equipment_number,
				'02' AS extends1,
				'01' AS extends2
			FROM
				card_port_data cp 
			where (cp.point_gis_x!=null or cp.point_gis_x!='') AND (cp.point_gis_y!=null or cp.point_gis_y!='')
	   ) track
   WHERE
	track.driving_record = #{drivingRecord,jdbcType=VARCHAR}
    ORDER BY track.through_time ASC;
  </select>

  <!-- 根据车牌号码查询 -->
  <select id="selectDrivingTrackBylicenseNum" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from driving_track
    where license_num = #{licenseNum,jdbcType=VARCHAR}
  </select>
  
  <!-- 根据车牌号查询行驶轨迹数据 -->
    <resultMap id="drivingTrackResultMap" type="com.kentrasoft.cms.entity.DrivingTrack">
    	<result column="num" jdbcType="VARCHAR" property="num" />
    	<result column="gisX" jdbcType="VARCHAR" property="gisX" />
    	<result column="gisY" jdbcType="VARCHAR" property="gisY" />
    	<result column="times" jdbcType="TIMESTAMP" property="times" />
    	<result column="address" jdbcType="VARCHAR" property="address" />
    </resultMap>
  <select id="queryDrivingTrackBylicenseNum" parameterType="java.lang.String" resultMap="drivingTrackResultMap">
	SELECT
		a.license_num AS num,
		a.device_address AS address,
		a.through_time AS times,
		a.device_gis_x AS gisX,
		a.device_gis_y AS gisY
	FROM driving_track a
	WHERE
		a.license_num = #{licenseNum,jdbcType=VARCHAR}
	AND	
		a.driving_record = #{drivingRecord,jdbcType=VARCHAR}
	UNION 
	SELECT 
		b.license_num AS num,
		b.station_name AS address,
		b.pass_time AS times,
		b.point_gis_x AS gisX,
		b.point_gis_y AS gisY
	from card_port_data b
	WHERE
		b.license_num = #{licenseNum,jdbcType=VARCHAR}
	AND
		b.driving_record = #{drivingRecord,jdbcType=VARCHAR}	
	ORDER BY times ASC 
		
  </select>
  
  <!-- 根据车牌查询行驶轨迹信息，5.8G接收数据 -->
  <select id="queryDrivingtrackNotend" parameterType="java.lang.String" resultMap="BaseResultMap">
     select
     <include refid="Base_Column_List"></include>
     from driving_track
     where license_num = #{licenseNum,jdbcType=VARCHAR}
     and extends1 = #{trackStatus,jdbcType=VARCHAR}
     and through_time <![CDATA[ <=sysdate() ]]>
     order by through_time desc
  </select>
  
  <!--查询设备code,5.8G接收数据  -->
  <select id="queryDeviceCode" parameterType="java.lang.String" resultType="java.lang.String">
    select device_code
     from device_management
     where device_gis_x = #{GisX,jdbcType=VARCHAR}
     and device_gis_y = #{GisY,jdbcType=VARCHAR}
     and name = #{deviceName,jdbcType=VARCHAR}
     and device_code = #{deviceCode,jdbcType=VARCHAR} 
  </select>
  
  <!--出站口查询行驶规矩，卡口数据  -->
  <resultMap type="com.kentrasoft.cms.port.entity.exitPoint.ExitpointQueryResult" id="exitpointQueryResult">
     <result column="trackid" jdbcType="VARCHAR" property="trackid" />
     <result column="license" jdbcType="VARCHAR" property="license" />
     <result column="passtime" jdbcType="TIMESTAMP" property="passtiem" />
     <result column="gisx" jdbcType="VARCHAR" property="gisx" />
     <result column="gisy" jdbcType="VARCHAR" property="gisy" />
     <result column="devicename" jdbcType="VARCHAR" property="devicename" />
     <result column="datafrom" jdbcType="VARCHAR" property="datafrom" />
  </resultMap>
  
  <select id="queryTrackAndCard" parameterType="java.lang.String" resultMap="exitpointQueryResult">
     select 
         tk.driving_record as trackid,
         tk.license_num as license,
         tk.through_time as passtime,
         tk.device_gis_x as gisx,
         tk.device_gis_y as gisy,
         tk.device_address as devicename,
         'device' as datafrom
     from  driving_track tk  where tk.extends1='01' and tk.license_num = #{license,jdbcType=VARCHAR} and tk.through_time <![CDATA[ <= #{exitTime,jdbcType=TIMESTAMP} ]]>
     order by passtime asc;
  </select>
  
  <!--更新行驶轨迹状态  -->
  <update id="updatedeviceStatus">
     update driving_track set extends1 = #{status,jdbcType=VARCHAR}  where  driving_record = #{trackId,jdbcType=VARCHAR}
  </update>
  
  <!--根据车牌、进出站口时间查询行驶轨迹数据  -->
  <resultMap id="importpointQueryResults" type="com.kentrasoft.cms.port.entity.importPoint.ImportpointQueryResult">
     <result column="trackid" jdbcType="VARCHAR" property="trackid" />
     <result column="license" jdbcType="VARCHAR" property="license" />
     <result column="passtime" jdbcType="TIMESTAMP" property="passtiem" />
     <result column="gisx" jdbcType="VARCHAR" property="gisx" />
     <result column="gisy" jdbcType="VARCHAR" property="gisy" />
     <result column="devicename" jdbcType="VARCHAR" property="devicename" />
     <result column="datafrom" jdbcType="VARCHAR" property="datafrom" />
  </resultMap>
  <select id="queryDrivingTrack" parameterType="java.lang.String" resultMap="importpointQueryResults">
  	 SELECT a.driving_record AS trackid FROM driving_track a
	 WHERE  a.license_num = #{license,jdbcType=VARCHAR}
	 AND 	a.through_time <![CDATA[ >= #{instationTime,jdbcType=TIMESTAMP}]]>
	 AND 	a.through_time <![CDATA[ <= #{outstationTime,jdbcType=TIMESTAMP}]]>
  	 AND	a.extends1 = '02'	
  </select>
  
    <resultMap id="cardportPointQueryResults" type="com.kentrasoft.cms.port.entity.cardPortPoint.CardportPointQueryResult">
     <result column="trackid" jdbcType="VARCHAR" property="trackid" />
     <result column="license" jdbcType="VARCHAR" property="license" />
     <result column="passtime" jdbcType="TIMESTAMP" property="passtiem" />
     <result column="gisx" jdbcType="VARCHAR" property="gisx" />
     <result column="gisy" jdbcType="VARCHAR" property="gisy" />
     <result column="devicename" jdbcType="VARCHAR" property="devicename" />
     <result column="datafrom" jdbcType="VARCHAR" property="datafrom" />
  </resultMap>
  <select id="cardportPointQueryResults" parameterType="java.lang.String" resultMap="cardportPointQueryResults">
  	 SELECT a.driving_record AS trackid FROM driving_track a
	 WHERE  a.license_num = #{license,jdbcType=VARCHAR}
	 AND	a.extends1 = '01'
  </select>
  <!-- 根据轨迹id查询行驶轨迹，地图展示 -->
  <select id="queryBytrackid" parameterType="java.lang.String" resultMap="exitpointQueryResult">
     select  
       t.driving_record trackid,
       t.license_num license,
       t.through_time passtime,
       t.device_gis_x gisx,
       t.device_gis_y gisy,
       case when t.extends2='01' then (select m.`name` from device_management m where m.device_code=t.equipment_number) 
            when t.extends2='02' then (select toll.toll_station_name from toll_station toll where toll.toll_station_code=t.equipment_number) end devicename,
       'device' as datafrom
     from  driving_track t  where t.driving_record = #{trackid,jdbcType=VARCHAR}
     and (t.device_gis_x!=null or  t.device_gis_x!='') and (t.device_gis_y!=null or t.device_gis_y!='')
     union all 
     select 
       DISTINCT
       c.driving_record trackid,
       c.license_num license,
       c.pass_time passtime,
       c.point_gis_x gisx, 
       c.point_gis_y gisy,
       c.station_name devicename,
       'carport' as datafrom 
     from card_port_data c where c.driving_record = #{trackid,jdbcType=VARCHAR}
     and (c.point_gis_x !=null or c.point_gis_x!='') and (c.point_gis_y!=null or c.point_gis_y!='')
     order by passtime asc;
  </select>
  
  <!--查询LED设备连接地址  -->
  <select id="querylinkAddress" parameterType="java.lang.String" resultType="java.lang.String">
     select 
       	led_address
     from led_management where led_code = #{cardpoint,jdbcType=VARCHAR}
  </select>
  
  <!-- 判断5.8G数据是否重复 -->
  <select id="checkresetdata" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List"></include>
    from driving_track
    where license_num = #{license,jdbcType=VARCHAR} and through_time = #{througthTime,jdbcType=VARCHAR}
  </select>
</mapper>