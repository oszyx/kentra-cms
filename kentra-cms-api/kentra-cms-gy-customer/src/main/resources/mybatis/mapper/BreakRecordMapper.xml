<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kentrasoft.cms.dao.BreakRecordMapper">
    <resultMap id="BaseResultMap" type="com.kentrasoft.cms.entity.BreakRecord">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="driving_record" jdbcType="VARCHAR" property="drivingRecord"/>
        <result column="license_num" jdbcType="VARCHAR" property="licenseNum"/>
        <result column="entrance_time" jdbcType="TIMESTAMP" property="entranceTime"/>
        <result column="exit_time" jdbcType="TIMESTAMP" property="exitTime"/>
        <result column="entrance_name" jdbcType="VARCHAR" property="entranceName"/>
        <result column="exit_name" jdbcType="VARCHAR" property="exitName"/>
        <result column="pay_money" jdbcType="VARCHAR" property="payMoney"/>
        <result column="remake_type" jdbcType="VARCHAR" property="remakeType"/>
        <result column="remake_content" jdbcType="VARCHAR" property="remakeContent"/>
        <result column="audit_status" jdbcType="VARCHAR" property="auditStatus"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="extends1" jdbcType="VARCHAR" property="extends1"/>
        <result column="extends2" jdbcType="VARCHAR" property="extends2"/>
        <result column="extends3" jdbcType="VARCHAR" property="extends3"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, driving_record, license_num, entrance_time, exit_time, entrance_name, exit_name, 
    pay_money, remake_type, remake_content, audit_status, create_time, update_time, extends1, 
    extends2, extends3
  </sql>
    <select id="selectByExample" parameterType="com.kentrasoft.cms.entity.BreakRecordExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from break_record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limitStart != null and limitStart&gt;=0">
            limit #{limitStart} , #{limitEnd}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from break_record
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from break_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.kentrasoft.cms.entity.BreakRecordExample">
        delete from break_record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.kentrasoft.cms.entity.BreakRecord">
    insert into break_record (id, driving_record, license_num, 
      entrance_time, exit_time, entrance_name, 
      exit_name, pay_money, remake_type, 
      remake_content, audit_status, create_time, 
      update_time, extends1, extends2, 
      extends3)
    values (#{id,jdbcType=INTEGER}, #{drivingRecord,jdbcType=VARCHAR}, #{licenseNum,jdbcType=VARCHAR}, 
      #{entranceTime,jdbcType=TIMESTAMP}, #{exitTime,jdbcType=TIMESTAMP}, #{entranceName,jdbcType=VARCHAR}, 
      #{exitName,jdbcType=VARCHAR}, #{payMoney,jdbcType=VARCHAR}, #{remakeType,jdbcType=VARCHAR}, 
      #{remakeContent,jdbcType=VARCHAR}, #{auditStatus,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{extends1,jdbcType=VARCHAR}, #{extends2,jdbcType=VARCHAR}, 
      #{extends3,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.kentrasoft.cms.entity.BreakRecord">
        insert into break_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="drivingRecord != null">
                driving_record,
            </if>
            <if test="licenseNum != null">
                license_num,
            </if>
            <if test="entranceTime != null">
                entrance_time,
            </if>
            <if test="exitTime != null">
                exit_time,
            </if>
            <if test="entranceName != null">
                entrance_name,
            </if>
            <if test="exitName != null">
                exit_name,
            </if>
            <if test="payMoney != null">
                pay_money,
            </if>
            <if test="remakeType != null">
                remake_type,
            </if>
            <if test="remakeContent != null">
                remake_content,
            </if>
            <if test="auditStatus != null">
                audit_status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="extends1 != null">
                extends1,
            </if>
            <if test="extends2 != null">
                extends2,
            </if>
            <if test="extends3 != null">
                extends3,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="drivingRecord != null">
                #{drivingRecord,jdbcType=VARCHAR},
            </if>
            <if test="licenseNum != null">
                #{licenseNum,jdbcType=VARCHAR},
            </if>
            <if test="entranceTime != null">
                #{entranceTime,jdbcType=TIMESTAMP},
            </if>
            <if test="exitTime != null">
                #{exitTime,jdbcType=TIMESTAMP},
            </if>
            <if test="entranceName != null">
                #{entranceName,jdbcType=VARCHAR},
            </if>
            <if test="exitName != null">
                #{exitName,jdbcType=VARCHAR},
            </if>
            <if test="payMoney != null">
                #{payMoney,jdbcType=VARCHAR},
            </if>
            <if test="remakeType != null">
                #{remakeType,jdbcType=VARCHAR},
            </if>
            <if test="remakeContent != null">
                #{remakeContent,jdbcType=VARCHAR},
            </if>
            <if test="auditStatus != null">
                #{auditStatus,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="extends1 != null">
                #{extends1,jdbcType=VARCHAR},
            </if>
            <if test="extends2 != null">
                #{extends2,jdbcType=VARCHAR},
            </if>
            <if test="extends3 != null">
                #{extends3,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.kentrasoft.cms.entity.BreakRecordExample" resultType="java.lang.Long">
        select count(*) from break_record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update break_record
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.drivingRecord != null">
                driving_record = #{record.drivingRecord,jdbcType=VARCHAR},
            </if>
            <if test="record.licenseNum != null">
                license_num = #{record.licenseNum,jdbcType=VARCHAR},
            </if>
            <if test="record.entranceTime != null">
                entrance_time = #{record.entranceTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.exitTime != null">
                exit_time = #{record.exitTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.entranceName != null">
                entrance_name = #{record.entranceName,jdbcType=VARCHAR},
            </if>
            <if test="record.exitName != null">
                exit_name = #{record.exitName,jdbcType=VARCHAR},
            </if>
            <if test="record.payMoney != null">
                pay_money = #{record.payMoney,jdbcType=VARCHAR},
            </if>
            <if test="record.remakeType != null">
                remake_type = #{record.remakeType,jdbcType=VARCHAR},
            </if>
            <if test="record.remakeContent != null">
                remake_content = #{record.remakeContent,jdbcType=VARCHAR},
            </if>
            <if test="record.auditStatus != null">
                audit_status = #{record.auditStatus,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.extends1 != null">
                extends1 = #{record.extends1,jdbcType=VARCHAR},
            </if>
            <if test="record.extends2 != null">
                extends2 = #{record.extends2,jdbcType=VARCHAR},
            </if>
            <if test="record.extends3 != null">
                extends3 = #{record.extends3,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update break_record
        set id = #{record.id,jdbcType=INTEGER},
        driving_record = #{record.drivingRecord,jdbcType=VARCHAR},
        license_num = #{record.licenseNum,jdbcType=VARCHAR},
        entrance_time = #{record.entranceTime,jdbcType=TIMESTAMP},
        exit_time = #{record.exitTime,jdbcType=TIMESTAMP},
        entrance_name = #{record.entranceName,jdbcType=VARCHAR},
        exit_name = #{record.exitName,jdbcType=VARCHAR},
        pay_money = #{record.payMoney,jdbcType=VARCHAR},
        remake_type = #{record.remakeType,jdbcType=VARCHAR},
        remake_content = #{record.remakeContent,jdbcType=VARCHAR},
        audit_status = #{record.auditStatus,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        extends1 = #{record.extends1,jdbcType=VARCHAR},
        extends2 = #{record.extends2,jdbcType=VARCHAR},
        extends3 = #{record.extends3,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.kentrasoft.cms.entity.BreakRecord">
        update break_record
        <set>
            <if test="drivingRecord != null">
                driving_record = #{drivingRecord,jdbcType=VARCHAR},
            </if>
            <if test="licenseNum != null">
                license_num = #{licenseNum,jdbcType=VARCHAR},
            </if>
            <if test="entranceTime != null">
                entrance_time = #{entranceTime,jdbcType=TIMESTAMP},
            </if>
            <if test="exitTime != null">
                exit_time = #{exitTime,jdbcType=TIMESTAMP},
            </if>
            <if test="entranceName != null">
                entrance_name = #{entranceName,jdbcType=VARCHAR},
            </if>
            <if test="exitName != null">
                exit_name = #{exitName,jdbcType=VARCHAR},
            </if>
            <if test="payMoney != null">
                pay_money = #{payMoney,jdbcType=VARCHAR},
            </if>
            <if test="remakeType != null">
                remake_type = #{remakeType,jdbcType=VARCHAR},
            </if>
            <if test="remakeContent != null">
                remake_content = #{remakeContent,jdbcType=VARCHAR},
            </if>
            <if test="auditStatus != null">
                audit_status = #{auditStatus,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="extends1 != null">
                extends1 = #{extends1,jdbcType=VARCHAR},
            </if>
            <if test="extends2 != null">
                extends2 = #{extends2,jdbcType=VARCHAR},
            </if>
            <if test="extends3 != null">
                extends3 = #{extends3,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.kentrasoft.cms.entity.BreakRecord">
    update break_record
    set driving_record = #{drivingRecord,jdbcType=VARCHAR},
      license_num = #{licenseNum,jdbcType=VARCHAR},
      entrance_time = #{entranceTime,jdbcType=TIMESTAMP},
      exit_time = #{exitTime,jdbcType=TIMESTAMP},
      entrance_name = #{entranceName,jdbcType=VARCHAR},
      exit_name = #{exitName,jdbcType=VARCHAR},
      pay_money = #{payMoney,jdbcType=VARCHAR},
      remake_type = #{remakeType,jdbcType=VARCHAR},
      remake_content = #{remakeContent,jdbcType=VARCHAR},
      audit_status = #{auditStatus,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      extends1 = #{extends1,jdbcType=VARCHAR},
      extends2 = #{extends2,jdbcType=VARCHAR},
      extends3 = #{extends3,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <delete id="deleteByPKs" parameterType="String">
      delete from `break_record` WHERE FIND_IN_SET(id,#{ids})
  </delete>

    <!-- 根据车牌号码查询 -->
    <select id="selectBreakRecordBylicenseNum" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from break_record
        where license_num = #{licenseNum,jdbcType=VARCHAR}
    </select>


    <!--统计违规信息结果集-->
    <resultMap id="BreakCountResultMap" type="com.kentrasoft.cms.entity.dto.BreakCount">
        <result column="mon" jdbcType="VARCHAR" property="mon"/>
        <result column="totalCount" jdbcType="INTEGER" property="totalCount"/>
        <result column="review" jdbcType="INTEGER" property="review"/>
        <result column="reviewPercent" jdbcType="DOUBLE" property="reviewPercent"/>
        <result column="breaked" jdbcType="INTEGER" property="breaked"/>
        <result column="breakedPercent" jdbcType="DOUBLE" property="breakedPercent"/>
        <result column="nobreak" jdbcType="INTEGER" property="nobreak"/>
        <result column="nobreakPercent" jdbcType="DOUBLE" property="nobreakPercent"/>
    </resultMap>
    <!--统计违规信息-->
    <select id="breakCount" parameterType="java.lang.String" resultMap="BreakCountResultMap">
        SELECT
            temp.mon,br.totalCount,br.review,br.reviewPercent,br.breaked,br.breakedPercent,br.nobreak,br.nobreakPercent
        FROM
            (SELECT
                DATE_FORMAT(`create_time`,'%m月') AS 'createTime',
                COUNT(0) AS 'totalCount',
                SUM(`audit_status` = 'break_underview_01') AS 'review',
                SUM(`audit_status` = 'break_underview_02') AS 'breaked',
                SUM(`audit_status` = 'break_underview_03') AS 'nobreak',
                FORMAT(SUM(`audit_status` = 'break_underview_01')/ COUNT(0) * 100,2) AS 'reviewPercent',
                FORMAT(SUM(`audit_status` = 'break_underview_02')/ COUNT(0) * 100,2) AS 'breakedPercent',
                FORMAT(SUM(`audit_status` = 'break_underview_03')/ COUNT(0) * 100,2) AS 'nobreakPercent'
            FROM
                `break_record`
            WHERE
                YEAR(create_time) = #{year,jdbcType=VARCHAR}
            GROUP BY
                DATE_FORMAT(`create_time`,'%m月')
            ) br
        RIGHT JOIN(
                SELECT '01月' AS mon FROM  DUAL UNION ALL
                SELECT '02月' AS mon FROM  DUAL UNION ALL
                SELECT '03月' AS mon FROM  DUAL UNION ALL
                SELECT '04月' AS mon FROM  DUAL UNION ALL
                SELECT '05月' AS mon FROM  DUAL UNION ALL
                SELECT '06月' AS mon FROM  DUAL UNION ALL
                SELECT '07月' AS mon FROM  DUAL UNION ALL
                SELECT '08月' AS mon FROM  DUAL UNION ALL
                SELECT '09月' AS mon FROM  DUAL UNION ALL
                SELECT '10月' AS mon FROM  DUAL UNION ALL
                SELECT '11月' AS mon FROM  DUAL UNION ALL
                SELECT '12月' AS mon FROM  DUAL
        )temp ON br.createTime = temp.mon
  </select>
  
  <!-- 进出口查询违规记录 -->
  <select id="selectBytrackid" parameterType="java.lang.String" resultMap="BaseResultMap">
      select 
        <include refid="Base_Column_List"></include>
      from break_record
      where driving_record = #{trackId,jdbcType=VARCHAR}
  </select>
  
  
</mapper>