<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kentrasoft.cms.dao.PayRecordMapper">
  <resultMap id="BaseResultMap" type="com.kentrasoft.cms.entity.PayRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="license_num" jdbcType="VARCHAR" property="licenseNum" />
    <result column="driving_record" jdbcType="VARCHAR" property="drivingRecord" />
    <result column="entrance_name" jdbcType="VARCHAR" property="entranceName" />
    <result column="entrance_time" jdbcType="TIMESTAMP" property="entranceTime" />
    <result column="exit_name" jdbcType="VARCHAR" property="exitName" />
    <result column="exit_time" jdbcType="TIMESTAMP" property="exitTime" />
    <result column="receivables" jdbcType="DOUBLE" property="receivables" />
    <result column="pay_count" jdbcType="DOUBLE" property="payCount" />
    <result column="expenses_paid" jdbcType="DOUBLE" property="expensesPaid" />
    <result column="pay_status" jdbcType="VARCHAR" property="payStatus" />
    <result column="is_pay" jdbcType="VARCHAR" property="isPay" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="extends1" jdbcType="VARCHAR" property="extends1" />
    <result column="extends2" jdbcType="VARCHAR" property="extends2" />
    <result column="extends3" jdbcType="VARCHAR" property="extends3" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, license_num, driving_record, entrance_name, entrance_time, exit_name, exit_time, 
    receivables, pay_count, expenses_paid, pay_status, is_pay, pay_time, extends1, extends2, 
    extends3
  </sql>
  <select id="selectByExample" parameterType="com.kentrasoft.cms.entity.PayRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pay_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pay_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pay_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kentrasoft.cms.entity.PayRecordExample">
    delete from pay_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kentrasoft.cms.entity.PayRecord">
    insert into pay_record (id, license_num, driving_record, 
      entrance_name, entrance_time, exit_name, 
      exit_time, receivables, pay_count, 
      expenses_paid, pay_status, is_pay, 
      pay_time, extends1, extends2, 
      extends3)
    values (#{id,jdbcType=INTEGER}, #{licenseNum,jdbcType=VARCHAR}, #{drivingRecord,jdbcType=VARCHAR}, 
      #{entranceName,jdbcType=VARCHAR}, #{entranceTime,jdbcType=TIMESTAMP}, #{exitName,jdbcType=VARCHAR}, 
      #{exitTime,jdbcType=TIMESTAMP}, #{receivables,jdbcType=DOUBLE}, #{payCount,jdbcType=DOUBLE}, 
      #{expensesPaid,jdbcType=DOUBLE}, #{payStatus,jdbcType=VARCHAR}, #{isPay,jdbcType=VARCHAR}, 
      #{payTime,jdbcType=TIMESTAMP}, #{extends1,jdbcType=VARCHAR}, #{extends2,jdbcType=VARCHAR}, 
      #{extends3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.kentrasoft.cms.entity.PayRecord">
    insert into pay_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="licenseNum != null">
        license_num,
      </if>
      <if test="drivingRecord != null">
        driving_record,
      </if>
      <if test="entranceName != null">
        entrance_name,
      </if>
      <if test="entranceTime != null">
        entrance_time,
      </if>
      <if test="exitName != null">
        exit_name,
      </if>
      <if test="exitTime != null">
        exit_time,
      </if>
      <if test="receivables != null">
        receivables,
      </if>
      <if test="payCount != null">
        pay_count,
      </if>
      <if test="expensesPaid != null">
        expenses_paid,
      </if>
      <if test="payStatus != null">
        pay_status,
      </if>
      <if test="isPay != null">
        is_pay,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="extends1 != null">
        extends1,
      </if>
      <if test="extends2 != null">
        extends2,
      </if>
      <if test="extends3 != null">
        extends3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="licenseNum != null">
        #{licenseNum,jdbcType=VARCHAR},
      </if>
      <if test="drivingRecord != null">
        #{drivingRecord,jdbcType=VARCHAR},
      </if>
      <if test="entranceName != null">
        #{entranceName,jdbcType=VARCHAR},
      </if>
      <if test="entranceTime != null">
        #{entranceTime,jdbcType=TIMESTAMP},
      </if>
      <if test="exitName != null">
        #{exitName,jdbcType=VARCHAR},
      </if>
      <if test="exitTime != null">
        #{exitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="receivables != null">
        #{receivables,jdbcType=DOUBLE},
      </if>
      <if test="payCount != null">
        #{payCount,jdbcType=DOUBLE},
      </if>
      <if test="expensesPaid != null">
        #{expensesPaid,jdbcType=DOUBLE},
      </if>
      <if test="payStatus != null">
        #{payStatus,jdbcType=VARCHAR},
      </if>
      <if test="isPay != null">
        #{isPay,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="extends1 != null">
        #{extends1,jdbcType=VARCHAR},
      </if>
      <if test="extends2 != null">
        #{extends2,jdbcType=VARCHAR},
      </if>
      <if test="extends3 != null">
        #{extends3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kentrasoft.cms.entity.PayRecordExample" resultType="java.lang.Long">
    select count(*) from pay_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pay_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.licenseNum != null">
        license_num = #{record.licenseNum,jdbcType=VARCHAR},
      </if>
      <if test="record.drivingRecord != null">
        driving_record = #{record.drivingRecord,jdbcType=VARCHAR},
      </if>
      <if test="record.entranceName != null">
        entrance_name = #{record.entranceName,jdbcType=VARCHAR},
      </if>
      <if test="record.entranceTime != null">
        entrance_time = #{record.entranceTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.exitName != null">
        exit_name = #{record.exitName,jdbcType=VARCHAR},
      </if>
      <if test="record.exitTime != null">
        exit_time = #{record.exitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.receivables != null">
        receivables = #{record.receivables,jdbcType=DOUBLE},
      </if>
      <if test="record.payCount != null">
        pay_count = #{record.payCount,jdbcType=DOUBLE},
      </if>
      <if test="record.expensesPaid != null">
        expenses_paid = #{record.expensesPaid,jdbcType=DOUBLE},
      </if>
      <if test="record.payStatus != null">
        pay_status = #{record.payStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.isPay != null">
        is_pay = #{record.isPay,jdbcType=VARCHAR},
      </if>
      <if test="record.payTime != null">
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.extends1 != null">
        extends1 = #{record.extends1,jdbcType=VARCHAR},
      </if>
      <if test="record.extends2 != null">
        extends2 = #{record.extends2,jdbcType=VARCHAR},
      </if>
      <if test="record.extends3 != null">
        extends3 = #{record.extends3,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pay_record
    set id = #{record.id,jdbcType=INTEGER},
      license_num = #{record.licenseNum,jdbcType=VARCHAR},
      driving_record = #{record.drivingRecord,jdbcType=VARCHAR},
      entrance_name = #{record.entranceName,jdbcType=VARCHAR},
      entrance_time = #{record.entranceTime,jdbcType=TIMESTAMP},
      exit_name = #{record.exitName,jdbcType=VARCHAR},
      exit_time = #{record.exitTime,jdbcType=TIMESTAMP},
      receivables = #{record.receivables,jdbcType=DOUBLE},
      pay_count = #{record.payCount,jdbcType=DOUBLE},
      expenses_paid = #{record.expensesPaid,jdbcType=DOUBLE},
      pay_status = #{record.payStatus,jdbcType=VARCHAR},
      is_pay = #{record.isPay,jdbcType=VARCHAR},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      extends1 = #{record.extends1,jdbcType=VARCHAR},
      extends2 = #{record.extends2,jdbcType=VARCHAR},
      extends3 = #{record.extends3,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kentrasoft.cms.entity.PayRecord">
    update pay_record
    <set>
      <if test="licenseNum != null">
        license_num = #{licenseNum,jdbcType=VARCHAR},
      </if>
      <if test="drivingRecord != null">
        driving_record = #{drivingRecord,jdbcType=VARCHAR},
      </if>
      <if test="entranceName != null">
        entrance_name = #{entranceName,jdbcType=VARCHAR},
      </if>
      <if test="entranceTime != null">
        entrance_time = #{entranceTime,jdbcType=TIMESTAMP},
      </if>
      <if test="exitName != null">
        exit_name = #{exitName,jdbcType=VARCHAR},
      </if>
      <if test="exitTime != null">
        exit_time = #{exitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="receivables != null">
        receivables = #{receivables,jdbcType=DOUBLE},
      </if>
      <if test="payCount != null">
        pay_count = #{payCount,jdbcType=DOUBLE},
      </if>
      <if test="expensesPaid != null">
        expenses_paid = #{expensesPaid,jdbcType=DOUBLE},
      </if>
      <if test="payStatus != null">
        pay_status = #{payStatus,jdbcType=VARCHAR},
      </if>
      <if test="isPay != null">
        is_pay = #{isPay,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="extends1 != null">
        extends1 = #{extends1,jdbcType=VARCHAR},
      </if>
      <if test="extends2 != null">
        extends2 = #{extends2,jdbcType=VARCHAR},
      </if>
      <if test="extends3 != null">
        extends3 = #{extends3,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kentrasoft.cms.entity.PayRecord">
    update pay_record
    set license_num = #{licenseNum,jdbcType=VARCHAR},
      driving_record = #{drivingRecord,jdbcType=VARCHAR},
      entrance_name = #{entranceName,jdbcType=VARCHAR},
      entrance_time = #{entranceTime,jdbcType=TIMESTAMP},
      exit_name = #{exitName,jdbcType=VARCHAR},
      exit_time = #{exitTime,jdbcType=TIMESTAMP},
      receivables = #{receivables,jdbcType=DOUBLE},
      pay_count = #{payCount,jdbcType=DOUBLE},
      expenses_paid = #{expensesPaid,jdbcType=DOUBLE},
      pay_status = #{payStatus,jdbcType=VARCHAR},
      is_pay = #{isPay,jdbcType=VARCHAR},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      extends1 = #{extends1,jdbcType=VARCHAR},
      extends2 = #{extends2,jdbcType=VARCHAR},
      extends3 = #{extends3,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--**************************************自定义sql****************************************-->
    <!--删除-->
    <delete id="deleteByPKs" parameterType="String">
      delete from pay_record WHERE FIND_IN_SET(id,#{ids})
  </delete>

    <!--查询行车缴费记录-->
    <resultMap id="DrivingPayRecordResultMap" type="com.kentrasoft.cms.entity.dto.DrivingPayRecord" extends="BaseResultMap">
        <result column="lane_num" jdbcType="VARCHAR" property="laneNum"/>
        <result column="entrance_time" jdbcType="TIMESTAMP" property="entranceTime"/>
        <result column="exit_time" jdbcType="TIMESTAMP" property="exitTime"/>
        <result column="entrance_name" jdbcType="VARCHAR" property="entranceName"/>
        <result column="exit_name" jdbcType="VARCHAR" property="exitName"/>
        <result column="equipment_number" jdbcType="VARCHAR" property="equipmentNumber"/>
        <result column="export_longitude" jdbcType="VARCHAR" property="exportLongitude"/>
        <result column="export_latitudes" jdbcType="VARCHAR" property="exportLatitudes"/>
        <result column="entrance_longitude" jdbcType="VARCHAR" property="entranceLongitude"/>
        <result column="entrance_latitudes" jdbcType="VARCHAR" property="entranceLatitudes"/>
    </resultMap>

    <select id="findDrivingPayment" parameterType="java.util.Map" resultMap="DrivingPayRecordResultMap">
        SELECT
        p.id, p.license_num, p.driving_record, p.pay_status, p.is_pay, p.pay_time,
        p.pay_count, p.receivables,p.expenses_paid, p.entrance_name, p.entrance_time,
        dr.lane_num, dr.entrance_time, dr.exit_time, dr.entrance_name,dr.exit_name, dr.create_time,
        dr.equipment_number, dr.export_longitude, dr.export_latitudes,dr.entrance_longitude, dr.entrance_latitudes
        FROM
        `driving_license` AS dl,
        `pay_record` AS p,
        `driving_record` AS dr
        WHERE
        dl.`license_num`=p.`license_num`
        AND dr.`driving_record` = p.`driving_record`
        <if test="licenseNum != null">
            AND dl.`license_num` = #{licenseNum}
        </if>
        <if test="customerId != null">
            AND dl.`customer_id` = #{customerId}
        </if>
        <if test="isPay != null and isPay != ''">
            AND p.`is_pay` = #{isPay}
        </if>
        ORDER BY
        p.`pay_time` desc
    </select>
    
    <!-- 查询要导出的数据 -->
    <select id="selectPayRecord" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from pay_record
    </select>
    <!-- 根据条件查询要导出的数据 -->
    <select id="queryPayRecordListBykey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from pay_record a
        WHERE   a.license_num LIKE '%${licenseNumParam}%'
        AND		a.pay_status LIKE '%${PayStatusParam}%'
        AND		a.is_pay LIKE '%${IsPayParam}%'
    </select>
</mapper>