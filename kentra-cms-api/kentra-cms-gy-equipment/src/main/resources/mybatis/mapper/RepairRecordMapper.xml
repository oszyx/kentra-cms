<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kentrasoft.cms.dao.RepairRecordMapper">
    <resultMap id="BaseResultMap" type="com.kentrasoft.cms.entity.RepairRecord">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="repair_device_id" jdbcType="VARCHAR" property="repairDeviceId"/>
        <result column="repair_device_name" jdbcType="VARCHAR" property="repairDeviceName"/>
        <result column="repair_user_phone" jdbcType="VARCHAR" property="repairUserPhone"/>
        <result column="repair_user_name" jdbcType="VARCHAR" property="repairUserName"/>
        <result column="repair_date_star" jdbcType="TIMESTAMP" property="repairDateStar"/>
        <result column="repair_date_end" jdbcType="TIMESTAMP" property="repairDateEnd"/>
        <result column="repair_status" jdbcType="VARCHAR" property="repairStatus"/>
        <result column="repair_notice" jdbcType="VARCHAR" property="repairNotice"/>
        <result column="repair_reason" jdbcType="VARCHAR" property="repairReason"/>
        <result column="extends1" jdbcType="VARCHAR" property="extends1"/>
        <result column="extends2" jdbcType="VARCHAR" property="extends2"/>
        <result column="extends3" jdbcType="VARCHAR" property="extends3"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, repair_device_id, repair_device_name, repair_user_phone, repair_user_name, repair_date_star, 
    repair_date_end, repair_status, repair_notice, repair_reason, extends1, extends2, 
    extends3
  </sql>
    <select id="selectByExample" parameterType="com.kentrasoft.cms.entity.RepairRecordExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from repair_record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limitStart != null and limitStart&gt;=0">
            limit #{limitStart} , #{limitEnd}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from repair_record
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from repair_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.kentrasoft.cms.entity.RepairRecordExample">
        delete from repair_record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.kentrasoft.cms.entity.RepairRecord">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into repair_record (repair_device_id, repair_device_name,
        repair_user_phone, repair_user_name, repair_date_star,
        repair_date_end, repair_status, repair_notice,
        repair_reason, extends1, extends2,
        extends3)
        values (#{repairDeviceId,jdbcType=VARCHAR}, #{repairDeviceName,jdbcType=VARCHAR},
        #{repairUserPhone,jdbcType=VARCHAR}, #{repairUserName,jdbcType=VARCHAR}, #{repairDateStar,jdbcType=TIMESTAMP},
        #{repairDateEnd,jdbcType=TIMESTAMP}, #{repairStatus,jdbcType=VARCHAR}, #{repairNotice,jdbcType=VARCHAR},
        #{repairReason,jdbcType=VARCHAR}, #{extends1,jdbcType=VARCHAR}, #{extends2,jdbcType=VARCHAR},
        #{extends3,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.kentrasoft.cms.entity.RepairRecord">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into repair_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="repairDeviceId != null">
                repair_device_id,
            </if>
            <if test="repairDeviceName != null">
                repair_device_name,
            </if>
            <if test="repairUserPhone != null">
                repair_user_phone,
            </if>
            <if test="repairUserName != null">
                repair_user_name,
            </if>
            <if test="repairDateStar != null">
                repair_date_star,
            </if>
            <if test="repairDateEnd != null">
                repair_date_end,
            </if>
            <if test="repairStatus != null">
                repair_status,
            </if>
            <if test="repairNotice != null">
                repair_notice,
            </if>
            <if test="repairReason != null">
                repair_reason,
            </if>
            <if test="extends1 != null">
                extends1,
            </if>
            <if test="extends2 != null">
                extends2,
            </if>
            <if test="extends3 != null">
                extends3,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="repairDeviceId != null">
                #{repairDeviceId,jdbcType=VARCHAR},
            </if>
            <if test="repairDeviceName != null">
                #{repairDeviceName,jdbcType=VARCHAR},
            </if>
            <if test="repairUserPhone != null">
                #{repairUserPhone,jdbcType=VARCHAR},
            </if>
            <if test="repairUserName != null">
                #{repairUserName,jdbcType=VARCHAR},
            </if>
            <if test="repairDateStar != null">
                #{repairDateStar,jdbcType=TIMESTAMP},
            </if>
            <if test="repairDateEnd != null">
                #{repairDateEnd,jdbcType=TIMESTAMP},
            </if>
            <if test="repairStatus != null">
                #{repairStatus,jdbcType=VARCHAR},
            </if>
            <if test="repairNotice != null">
                #{repairNotice,jdbcType=VARCHAR},
            </if>
            <if test="repairReason != null">
                #{repairReason,jdbcType=VARCHAR},
            </if>
            <if test="extends1 != null">
                #{extends1,jdbcType=VARCHAR},
            </if>
            <if test="extends2 != null">
                #{extends2,jdbcType=VARCHAR},
            </if>
            <if test="extends3 != null">
                #{extends3,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.kentrasoft.cms.entity.RepairRecordExample" resultType="java.lang.Long">
        select count(*) from repair_record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update repair_record
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.repairDeviceId != null">
                repair_device_id = #{record.repairDeviceId,jdbcType=VARCHAR},
            </if>
            <if test="record.repairDeviceName != null">
                repair_device_name = #{record.repairDeviceName,jdbcType=VARCHAR},
            </if>
            <if test="record.repairUserPhone != null">
                repair_user_phone = #{record.repairUserPhone,jdbcType=VARCHAR},
            </if>
            <if test="record.repairUserName != null">
                repair_user_name = #{record.repairUserName,jdbcType=VARCHAR},
            </if>
            <if test="record.repairDateStar != null">
                repair_date_star = #{record.repairDateStar,jdbcType=TIMESTAMP},
            </if>
            <if test="record.repairDateEnd != null">
                repair_date_end = #{record.repairDateEnd,jdbcType=TIMESTAMP},
            </if>
            <if test="record.repairStatus != null">
                repair_status = #{record.repairStatus,jdbcType=VARCHAR},
            </if>
            <if test="record.repairNotice != null">
                repair_notice = #{record.repairNotice,jdbcType=VARCHAR},
            </if>
            <if test="record.repairReason != null">
                repair_reason = #{record.repairReason,jdbcType=VARCHAR},
            </if>
            <if test="record.extends1 != null">
                extends1 = #{record.extends1,jdbcType=VARCHAR},
            </if>
            <if test="record.extends2 != null">
                extends2 = #{record.extends2,jdbcType=VARCHAR},
            </if>
            <if test="record.extends3 != null">
                extends3 = #{record.extends3,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update repair_record
        set id = #{record.id,jdbcType=BIGINT},
        repair_device_id = #{record.repairDeviceId,jdbcType=VARCHAR},
        repair_device_name = #{record.repairDeviceName,jdbcType=VARCHAR},
        repair_user_phone = #{record.repairUserPhone,jdbcType=VARCHAR},
        repair_user_name = #{record.repairUserName,jdbcType=VARCHAR},
        repair_date_star = #{record.repairDateStar,jdbcType=TIMESTAMP},
        repair_date_end = #{record.repairDateEnd,jdbcType=TIMESTAMP},
        repair_status = #{record.repairStatus,jdbcType=VARCHAR},
        repair_notice = #{record.repairNotice,jdbcType=VARCHAR},
        repair_reason = #{record.repairReason,jdbcType=VARCHAR},
        extends1 = #{record.extends1,jdbcType=VARCHAR},
        extends2 = #{record.extends2,jdbcType=VARCHAR},
        extends3 = #{record.extends3,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.kentrasoft.cms.entity.RepairRecord">
        update repair_record
        <set>
            <if test="repairDeviceId != null">
                repair_device_id = #{repairDeviceId,jdbcType=VARCHAR},
            </if>
            <if test="repairDeviceName != null">
                repair_device_name = #{repairDeviceName,jdbcType=VARCHAR},
            </if>
            <if test="repairUserPhone != null">
                repair_user_phone = #{repairUserPhone,jdbcType=VARCHAR},
            </if>
            <if test="repairUserName != null">
                repair_user_name = #{repairUserName,jdbcType=VARCHAR},
            </if>
            <if test="repairDateStar != null">
                repair_date_star = #{repairDateStar,jdbcType=TIMESTAMP},
            </if>
            <if test="repairDateEnd != null">
                repair_date_end = #{repairDateEnd,jdbcType=TIMESTAMP},
            </if>
            <if test="repairStatus != null">
                repair_status = #{repairStatus,jdbcType=VARCHAR},
            </if>
            <if test="repairNotice != null">
                repair_notice = #{repairNotice,jdbcType=VARCHAR},
            </if>
            <if test="repairReason != null">
                repair_reason = #{repairReason,jdbcType=VARCHAR},
            </if>
            <if test="extends1 != null">
                extends1 = #{extends1,jdbcType=VARCHAR},
            </if>
            <if test="extends2 != null">
                extends2 = #{extends2,jdbcType=VARCHAR},
            </if>
            <if test="extends3 != null">
                extends3 = #{extends3,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.kentrasoft.cms.entity.RepairRecord">
    update repair_record
    set repair_device_id = #{repairDeviceId,jdbcType=VARCHAR},
      repair_device_name = #{repairDeviceName,jdbcType=VARCHAR},
      repair_user_phone = #{repairUserPhone,jdbcType=VARCHAR},
      repair_user_name = #{repairUserName,jdbcType=VARCHAR},
      repair_date_star = #{repairDateStar,jdbcType=TIMESTAMP},
      repair_date_end = #{repairDateEnd,jdbcType=TIMESTAMP},
      repair_status = #{repairStatus,jdbcType=VARCHAR},
      repair_notice = #{repairNotice,jdbcType=VARCHAR},
      repair_reason = #{repairReason,jdbcType=VARCHAR},
      extends1 = #{extends1,jdbcType=VARCHAR},
      extends2 = #{extends2,jdbcType=VARCHAR},
      extends3 = #{extends3,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <!--##############################################自定义方法##################################################-->
    <!--批量删除-->
    <delete id="deleteByPKs" parameterType="String">
      delete from `repair_record` WHERE FIND_IN_SET(id,#{ids})
  </delete>


    <!--liyang-->
    <!--根据led设备id获取维修记录-->
    <select id="selectByLedId" parameterType="string" resultMap="BaseResultMap">
              SELECT id, repair_device_name, repair_user_phone, repair_user_name, repair_date_star,
                    repair_date_end, repair_status, repair_reason,repair_notice
              FROM repair_record
              WHERE 1=1 AND repair_device_id=#{ledId}
              ORDER BY repair_date_end DESC
    </select>
    <delete id="deleteByIds">
        delete from `repair_record`
        where repair_device_id in
        <foreach collection="idList" item="item" index="index"
                 open="(" close=")" separator=",">
            #{item}
        </foreach>
    </delete>
    <!--liyang-->
    
    <!-- 根据维修设备id修改维修状态 -->
    <update id="updateRepairRecordStatus">
    	update `repair_record` set repair_status=#{repairStatus,jdbcType=VARCHAR} 
    	where repair_device_id=#{repairDeviceId,jdbcType=VARCHAR}
  	</update>
    
</mapper>