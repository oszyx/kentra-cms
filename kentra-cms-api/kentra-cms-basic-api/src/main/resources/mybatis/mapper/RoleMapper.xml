<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kentrasoft.cms.dao.RoleDao">

    <resultMap id="resultMap" type="com.kentrasoft.cms.model.Role">
        <result property="id" column="id"/>
        <result property="roleName" column="role_name"/>
        <result property="roleCode" column="role_code"/>
        <result property="roleRights" column="role_rights"/>
        <result property="roleStatus" column="role_status"/>
        <result property="rolePid" column="role_pid"/>
        <result property="creator" column="creator"/>
        <result property="createTime" column="create_time"/>
        <result property="updator" column="updator"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="baseCol">
        `id`,`role_name`,`role_code`,`role_rights`,`role_status`,`role_pid`,`creator`,`create_time`,`updator`,`update_time`
    </sql>

    <sql id="pageSql">
        <if test="__start !=null and __size!=null"><![CDATA[ limit #{__start},#{__size} ]]></if>
    </sql>

    <sql id="whereSql">
        <trim prefix="WHERE" prefixOverrides="and |or ">
            <if test="id != null"><![CDATA[ and  `id` = #{id:NUMERIC}]]></if>
            <if test="id_r_min != null"><![CDATA[ and `id` >= #{id_r_min} and `id` <= #{id_r_max} ]]></if>
            <if test="id_enum != null"><![CDATA[ and $!{column.value.xmlFieldName} in ]]>
                <foreach collection="id_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="roleName != null"><![CDATA[ and  `role_name` = #{roleName:VARCHAR}]]></if>
            <if test="roleName_r_min != null">
                <![CDATA[ and `role_name` >= #{roleName_r_min} and `role_name` <= #{roleName_r_max} ]]></if>
            <if test="roleName_enum != null"><![CDATA[ and $!{column.value.xmlFieldName} in ]]>
                <foreach collection="roleName_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="roleCode != null"><![CDATA[ and  `role_code` = #{roleCode:VARCHAR}]]></if>
            <if test="roleCode_r_min != null">
                <![CDATA[ and `role_code` >= #{roleCode_r_min} and `role_code` <= #{roleCode_r_max} ]]></if>
            <if test="roleCode_enum != null"><![CDATA[ and $!{column.value.xmlFieldName} in ]]>
                <foreach collection="roleCode_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="roleRights != null"><![CDATA[ and  `role_rights` = #{roleRights:VARCHAR}]]></if>
            <if test="roleRights_r_min != null">
                <![CDATA[ and `role_rights` >= #{roleRights_r_min} and `role_rights` <= #{roleRights_r_max} ]]></if>
            <if test="roleRights_enum != null"><![CDATA[ and $!{column.value.xmlFieldName} in ]]>
                <foreach collection="roleRights_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="roleStatus != null"><![CDATA[ and  `role_status` = #{roleStatus:NUMERIC}]]></if>
            <if test="roleStatus_r_min != null">
                <![CDATA[ and `role_status` >= #{roleStatus_r_min} and `role_status` <= #{roleStatus_r_max} ]]></if>
            <if test="roleStatus_enum != null"><![CDATA[ and $!{column.value.xmlFieldName} in ]]>
                <foreach collection="roleStatus_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="rolePid != null"><![CDATA[ and  `role_pid` = #{rolePid:NUMERIC}]]></if>
            <if test="rolePid_r_min != null">
                <![CDATA[ and `role_pid` >= #{rolePid_r_min} and `role_pid` <= #{rolePid_r_max} ]]></if>
            <if test="rolePid_enum != null"><![CDATA[ and $!{column.value.xmlFieldName} in ]]>
                <foreach collection="rolePid_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="creator != null"><![CDATA[ and  `creator` = #{creator:NUMERIC}]]></if>
            <if test="creator_r_min != null">
                <![CDATA[ and `creator` >= #{creator_r_min} and `creator` <= #{creator_r_max} ]]></if>
            <if test="creator_enum != null"><![CDATA[ and $!{column.value.xmlFieldName} in ]]>
                <foreach collection="creator_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="createTime != null"><![CDATA[ and  `create_time` = #{createTime:DATETIME}]]></if>
            <if test="createTime_r_min != null">
                <![CDATA[ and `create_time` >= #{createTime_r_min} and `create_time` <= #{createTime_r_max} ]]></if>
            <if test="createTime_enum != null"><![CDATA[ and $!{column.value.xmlFieldName} in ]]>
                <foreach collection="createTime_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="updator != null"><![CDATA[ and  `updator` = #{updator:NUMERIC}]]></if>
            <if test="updator_r_min != null">
                <![CDATA[ and `updator` >= #{updator_r_min} and `updator` <= #{updator_r_max} ]]></if>
            <if test="updator_enum != null"><![CDATA[ and $!{column.value.xmlFieldName} in ]]>
                <foreach collection="updator_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
            <if test="updateTime != null"><![CDATA[ and  `update_time` = #{updateTime:DATETIME}]]></if>
            <if test="updateTime_r_min != null">
                <![CDATA[ and `update_time` >= #{updateTime_r_min} and `update_time` <= #{updateTime_r_max} ]]></if>
            <if test="updateTime_enum != null"><![CDATA[ and $!{column.value.xmlFieldName} in ]]>
                <foreach collection="updateTime_enum" item="value" open="(" separator="," close=")">
                    <![CDATA[ #{value} ]]>
                </foreach>
            </if>
        </trim>
    </sql>

    <sql id="orderSql">
        <trim prefix="ORDER BY" suffixOverrides=",">
            <if test="_orderBy == 'id_desc'"><![CDATA[ `id` desc, ]]></if>
            <if test="_orderBy == 'id_asc'"><![CDATA[ `id`, ]]></if>
            <if test="_orderBy == 'roleName_desc'"><![CDATA[ `role_name` desc, ]]></if>
            <if test="_orderBy == 'roleName_asc'"><![CDATA[ `role_name`, ]]></if>
            <if test="_orderBy == 'roleCode_desc'"><![CDATA[ `role_code` desc, ]]></if>
            <if test="_orderBy == 'roleCode_asc'"><![CDATA[ `role_code`, ]]></if>
            <if test="_orderBy == 'roleRights_desc'"><![CDATA[ `role_rights` desc, ]]></if>
            <if test="_orderBy == 'roleRights_asc'"><![CDATA[ `role_rights`, ]]></if>
            <if test="_orderBy == 'roleStatus_desc'"><![CDATA[ `role_status` desc, ]]></if>
            <if test="_orderBy == 'roleStatus_asc'"><![CDATA[ `role_status`, ]]></if>
            <if test="_orderBy == 'rolePid_desc'"><![CDATA[ `role_pid` desc, ]]></if>
            <if test="_orderBy == 'rolePid_asc'"><![CDATA[ `role_pid`, ]]></if>
            <if test="_orderBy == 'creator_desc'"><![CDATA[ `creator` desc, ]]></if>
            <if test="_orderBy == 'creator_asc'"><![CDATA[ `creator`, ]]></if>
            <if test="_orderBy == 'createTime_desc'"><![CDATA[ `create_time` desc, ]]></if>
            <if test="_orderBy == 'createTime_asc'"><![CDATA[ `create_time`, ]]></if>
            <if test="_orderBy == 'updator_desc'"><![CDATA[ `updator` desc, ]]></if>
            <if test="_orderBy == 'updator_asc'"><![CDATA[ `updator`, ]]></if>
            <if test="_orderBy == 'updateTime_desc'"><![CDATA[ `update_time` desc, ]]></if>
            <if test="_orderBy == 'updateTime_asc'"><![CDATA[ `update_time`, ]]></if>
            <if test="_orderBy_enum != null">
                <foreach collection="_orderBy_enum" item="orderItem" open="" separator="," close="">
                    <if test="orderItem == 'id_desc'"><![CDATA[ `id` desc ]]></if>
                    <if test="orderItem == 'id_asc'"><![CDATA[ `id` ]]></if>
                    <if test="orderItem == 'roleName_desc'"><![CDATA[ `role_name` desc ]]></if>
                    <if test="orderItem == 'roleName_asc'"><![CDATA[ `role_name` ]]></if>
                    <if test="orderItem == 'roleCode_desc'"><![CDATA[ `role_code` desc ]]></if>
                    <if test="orderItem == 'roleCode_asc'"><![CDATA[ `role_code` ]]></if>
                    <if test="orderItem == 'roleRights_desc'"><![CDATA[ `role_rights` desc ]]></if>
                    <if test="orderItem == 'roleRights_asc'"><![CDATA[ `role_rights` ]]></if>
                    <if test="orderItem == 'roleStatus_desc'"><![CDATA[ `role_status` desc ]]></if>
                    <if test="orderItem == 'roleStatus_asc'"><![CDATA[ `role_status` ]]></if>
                    <if test="orderItem == 'rolePid_desc'"><![CDATA[ `role_pid` desc ]]></if>
                    <if test="orderItem == 'rolePid_asc'"><![CDATA[ `role_pid` ]]></if>
                    <if test="orderItem == 'creator_desc'"><![CDATA[ `creator` desc ]]></if>
                    <if test="orderItem == 'creator_asc'"><![CDATA[ `creator` ]]></if>
                    <if test="orderItem == 'createTime_desc'"><![CDATA[ `create_time` desc ]]></if>
                    <if test="orderItem == 'createTime_asc'"><![CDATA[ `create_time` ]]></if>
                    <if test="orderItem == 'updator_desc'"><![CDATA[ `updator` desc ]]></if>
                    <if test="orderItem == 'updator_asc'"><![CDATA[ `updator` ]]></if>
                    <if test="orderItem == 'updateTime_desc'"><![CDATA[ `update_time` desc ]]></if>
                    <if test="orderItem == 'updateTime_asc'"><![CDATA[ `update_time` ]]></if>
                </foreach>
            </if>
        </trim>
    </sql>

    <sql id="updateSql">
        <trim prefix="set" prefixOverrides=",">
            <if test="roleName != null"><![CDATA[ ,`role_name` =  #{roleName}]]></if>
            <if test="roleCode != null"><![CDATA[ ,`role_code` =  #{roleCode}]]></if>
            <if test="roleRights != null"><![CDATA[ ,`role_rights` =  #{roleRights}]]></if>
            <if test="roleStatus != null"><![CDATA[ ,`role_status` =  #{roleStatus}]]></if>
            <if test="rolePid != null"><![CDATA[ ,`role_pid` =  #{rolePid}]]></if>
            <if test="creator != null"><![CDATA[ ,`creator` =  #{creator}]]></if>
            <if test="createTime != null"><![CDATA[ ,`create_time` =  #{createTime}]]></if>
            <if test="updator != null"><![CDATA[ ,`updator` =  #{updator}]]></if>
            <if test="updateTime != null"><![CDATA[ ,`update_time` =  #{updateTime}]]></if>
        </trim>
    </sql>

    <!--新增一个对象-->
    <insert id="insertObject" parameterType="com.kentrasoft.cms.model.Role">
        <selectKey resultType="Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into role(
        `id`,`role_name`,`role_code`,`role_rights`,`role_status`,`role_pid`,`creator`,`create_time`,`updator`,`update_time`
        ) values (
        #{id},#{roleName},#{roleCode},#{roleRights},#{roleStatus},#{rolePid},#{creator},#{createTime},#{updator},#{updateTime}
        )
    </insert>

    <!--新增多个对象-->
    <insert id="insertList" parameterType="java.util.List">
        insert into role (
        `role_name`,`role_code`,`role_rights`,`role_status`,`role_pid`,`creator`,`create_time`,`updator`,`update_time`
        ) values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.roleName},#{item.roleCode},#{item.roleRights},#{item.roleStatus},#{item.rolePid},#{item.creator},#{item.createTime},#{item.updator},#{item.updateTime})
        </foreach>
    </insert>

    <!--根据对象主键更新对象所有字段-->
    <update id="updateAll" parameterType="com.kentrasoft.cms.model.Role">
        update role set
                `role_name` = #{roleName},
                `role_code` = #{roleCode},
                `role_rights` = #{roleRights},
                `role_status` = #{roleStatus},
                `role_pid` = #{rolePid},
                `creator` = #{creator},
                `create_time` = #{createTime},
                `updator` = #{updator},
                `update_time` = #{updateTime}
        where `id`=#{id}
    </update>

    <!--根据对象主键更新对象不为空字段-->
    <update id="updateByObject" parameterType="com.kentrasoft.cms.model.Role">
        update role
        <include refid="updateSql"/>
        where `id`=#{id}
    </update>

    <!--根据对象主键更新对象指定字段-->
    <update id="updateByParams" parameterType="java.util.Map">
        update role
        <include refid="updateSql"/>
        where `id`=#{id}
    </update>

    <delete id="deleteById" parameterType="Long">
        DELETE FROM role WHERE id = #{id}
    </delete>

    <delete id="deleteByParams" parameterType="java.util.Map">
        DELETE FROM role
        <include refid="whereSql"/>
    </delete>

    <!--根据ids删除：【a.b.c】-->
    <delete id="deleteByIdsStr" parameterType="String">
        delete from role WHERE FIND_IN_SET(`id`,#{IdsStr})
    </delete>

    <!--根据id列表删除：【list<id>】-->
    <delete id="deleteByIds" parameterType="java.util.List">
        delete from role WHERE `id` in
        <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>


    <!--根据id查询-->
    <select id="findById" parameterType="Long" resultMap="resultMap">
        select
        <include refid="baseCol"/>
        from
        role
        where `id`=#{id}
    </select>

    <!--根据ids查询列表：【a.b.c】-->
    <select id="findByIdsStr" parameterType="String" resultMap="resultMap">
        select
        <include refid="baseCol"/>
        from role WHERE FIND_IN_SET(`id`,#{idsStr})
    </select>

    <!--根据id列表获取一组对象:【list<id>】-->
    <select id="findByIds" parameterType="java.util.List" resultMap="resultMap">
        select
        <include refid="baseCol"/>
        from role WHERE `id` in
        <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <!--根据条件查询数量-->
    <select id="queryCountByParams" parameterType="java.util.Map" resultType="int">
        select count(*) from role
        <include refid="whereSql"/>
    </select>

    <!--根据条件查询-->
    <select id="queryByParams" parameterType="java.util.Map" resultMap="resultMap">
        select
        <include refid="baseCol"/>
        from role
        <include refid="whereSql"/>
        <include refid="orderSql"/>
        <include refid="pageSql"/>
    </select>


    <!--查询所有-->
    <select id="findAll" resultMap="resultMap">
        select
        <include refid="baseCol"/>
        from role
    </select>

    <!--**********************************自定义***********************************-->

</mapper>