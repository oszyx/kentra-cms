<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kentrasoft.cms.dao.RoleMapper">
  <resultMap id="BaseResultMap" type="com.kentrasoft.cms.entity.Role">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="role_code" jdbcType="VARCHAR" property="roleCode" />
    <result column="rely_system" jdbcType="INTEGER" property="relySystem" />
    <result column="role_parent_id" jdbcType="BIGINT" property="roleParentId" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, role_name, role_code, rely_system, role_parent_id, `desc`, `status`, create_time, 
    update_time
  </sql>
  <select id="selectByExample" parameterType="com.kentrasoft.cms.entity.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart&gt;=0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.kentrasoft.cms.entity.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kentrasoft.cms.entity.Role">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into role (role_name, role_code, rely_system, 
      role_parent_id, `desc`, `status`, 
      create_time, update_time)
    values (#{roleName,jdbcType=VARCHAR}, #{roleCode,jdbcType=VARCHAR}, #{relySystem,jdbcType=INTEGER}, 
      #{roleParentId,jdbcType=BIGINT}, #{desc,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.kentrasoft.cms.entity.Role">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleName != null">
        role_name,
      </if>
      <if test="roleCode != null">
        role_code,
      </if>
      <if test="relySystem != null">
        rely_system,
      </if>
      <if test="roleParentId != null">
        role_parent_id,
      </if>
      <if test="desc != null">
        `desc`,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleCode != null">
        #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="relySystem != null">
        #{relySystem,jdbcType=INTEGER},
      </if>
      <if test="roleParentId != null">
        #{roleParentId,jdbcType=BIGINT},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kentrasoft.cms.entity.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.roleCode != null">
        role_code = #{record.roleCode,jdbcType=VARCHAR},
      </if>
      <if test="record.relySystem != null">
        rely_system = #{record.relySystem,jdbcType=INTEGER},
      </if>
      <if test="record.roleParentId != null">
        role_parent_id = #{record.roleParentId,jdbcType=BIGINT},
      </if>
      <if test="record.desc != null">
        `desc` = #{record.desc,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set id = #{record.id,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      role_code = #{record.roleCode,jdbcType=VARCHAR},
      rely_system = #{record.relySystem,jdbcType=INTEGER},
      role_parent_id = #{record.roleParentId,jdbcType=BIGINT},
      `desc` = #{record.desc,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kentrasoft.cms.entity.Role">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleCode != null">
        role_code = #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="relySystem != null">
        rely_system = #{relySystem,jdbcType=INTEGER},
      </if>
      <if test="roleParentId != null">
        role_parent_id = #{roleParentId,jdbcType=BIGINT},
      </if>
      <if test="desc != null">
        `desc` = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kentrasoft.cms.entity.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_code = #{roleCode,jdbcType=VARCHAR},
      rely_system = #{relySystem,jdbcType=INTEGER},
      role_parent_id = #{roleParentId,jdbcType=BIGINT},
      `desc` = #{desc,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <!-- 查询roleTreeList -->
  <select id="getTreeList" resultMap="BaseResultMap">
   select 
    <include refid="Base_Column_List" />
    from role where id!=1;
  </select>
  
  <!--删除角色  -->
  <delete id="deleteRoles" parameterType="String">
      delete from role  WHERE FIND_IN_SET(id,#{ids})
  </delete>
  <!--删除角色用户关联表数据  -->
  <delete id="deleteUserRole" parameterType="java.lang.String">
      delete from user_role where FIND_IN_SET (role_id,#{ids})
  </delete>
  <!--删除角色菜单表管理数据  -->
  <delete id="deleteRoleMenu" parameterType="java.lang.String">
      delete from role_menu where FIND_IN_SET (role_id,#{ids})
  </delete>
  <!--根据角色查询机构  -->
  <sql id="Base_menucloumn_List">
    m.id, m.menu_name, m.menu_code, m.menu_url, m.menu_parent_id, m.menu_target, m.menu_style, m.menu_order, 
    m.rely_system, m.status, m.create_time, m.update_time
  </sql>
  <resultMap id="BaseMenuResultMap" type="com.kentrasoft.cms.entity.Menu">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="menu_name" jdbcType="VARCHAR" property="menuName" />
    <result column="menu_code" jdbcType="VARCHAR" property="menuCode" />
    <result column="menu_url" jdbcType="VARCHAR" property="menuUrl" />
    <result column="menu_parent_id" jdbcType="BIGINT" property="menuParentId" />
    <result column="menu_target" jdbcType="VARCHAR" property="menuTarget" />
    <result column="menu_style" jdbcType="VARCHAR" property="menuStyle" />
    <result column="menu_order" jdbcType="VARCHAR" property="menuOrder" />
    <result column="rely_system" jdbcType="VARCHAR" property="relySystem" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <select id="findMenuAndId" resultMap="BaseMenuResultMap">
     select 
     <include refid="Base_menucloumn_List"/>
     from role_menu rm 
     INNER JOIN menu m on rm.menu_id=m.id
     where rm.role_id=#{arg0,jdbcType=BIGINT}  and m.id!=1;
  </select>
  
  <!--查询角色下是否有子角色  -->
  <select id="findChildrenRole" parameterType="String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role where FIND_IN_SET(role_parent_id,#{ids})
  </select>
  
  <!-- 根据角色code查询 -->
  <select id="findbyRoleCode" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from role where role_code = #{roleCode,jdbcType=VARCHAR}
    <if test="roleId !='' and roleId !=null">
    and id != #{roleId,jdbcType=BIGINT}
    </if>
    
  </select>
  
</mapper>